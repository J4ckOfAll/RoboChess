#BlueJ class context
comment0.target=RoboChess
comment0.text=\ Outline\ of\ RoboChess\n\n\ RoboChess\n\ \ |-\ KeyListener\ [RobotRC]\n\ \ |-\ Board\ \ \ \ \ \ \ [City]\n\ \ ^-\ BasePiece\ \ \ [RobotSE]\n\ \ \ \ \ \ |-Bishop\n\ \ \ \ \ \ |\ \ ^-BishopIcon\n\ \ \ \ \ \ |-King\n\ \ \ \ \ \ |\ \ ^-KingIcon\n\ \ \ \ \ \ |-Knight\n\ \ \ \ \ \ |\ \ ^-KnightIcon\n\ \ \ \ \ \ |-Pawn\n\ \ \ \ \ \ |\ \ ^-PawnIcon\n\ \ \ \ \ \ |-Queen\n\ \ \ \ \ \ |\ \ ^-QueenIcon\n\ \ \ \ \ \ ^-Rook\n\ \ \ \ \ \ \ \ \ ^-RookIcon\n\ \n\ All\ of\ the\ different\ chess\ Pieces\ are\ a\ subclass\ of\ BasePiece\n\ Utilizing\ polymorphism,\ these\ pieces\ are\ initialized\ and\ stored\n\ in\ an\ ArrayList\ of\ type\ BasePiece.\ All\ BasePieces\ inherit\ Board\n\ in\ their\ constuctors.\ Many\ classes\ inherit\ the\ BasePiece.Side\ enum.\n\ Methods\ of\ specific\ pieces\ are\ overrided\ in\ the\ child\ classes\ of\n\ BasePiece.\ Specific\ child\ classes\ of\ BasePiece\ also\ contain\ \n\ constructor\ overloads\ for\ creating\ a\ new\ piece\ from\ nothing\ and\n\ also\ transforming\ it\ as\ seen\ in\ Pawn\ promotion\ (Queen\ only\ but\n\ overloaded\ constructors\ exist\ with\ Rook,\ Bishop\ and\ knight)\n\ \n\ Program\ control\ flow\n\ \n\ Start\n\ \ |\n\ Initialize\n\ \ |\n\ Main\ loop\n\ \ \ \ \ \ \ |\n\ \ \ v--Wait\ for\ input<----------------------------------------\n\ \ \ |\ \ \ \ |\ \ \ \ \ \ ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ^\ \ \ \ \ \ ^\n\ \ \ |\ \ Move\ Selector\ to\ point\ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ |->Selection\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (no)\ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (esc)\ |\ \ \ \ \ \ |\n\ \ \ \ \ \ Valid\ Selection?---------^\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ \ \ \ \ |\ (yes)\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ \ \ \ Generate\ all\ potential\ options\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ \ \ \ Validate\ all\ options\ (check,\ blocking,\ etc...)\ |\ \ \ \ \ \ |\n\ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\ \ \ \ \ \ |\n\ \ \ \ \ \ Wait\ for\ Selection-----------------------------^\ \ \ \ \ \ |\n\ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\n\ \ \ \ \ \ Execute\ selection\ (Move\ piece\ to,\ eliminate,\ etc...)\ \ |\n\ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\n\ \ \ \ \ \ Change\ to\ next\ turn\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ |\n\ \ \ \ \ \ \ |\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (no\ checkmate\ or\ stalemate)\ |\n\ \ \ \ \ \ Check\ for\ Checkmate\ or\ Stalemate----------------------^\n\ \ \ \ \ \ \ |\ (checkmate\ or\ stalemate)\n\ \ \ \ \ \ Display\ winner\ or\ stalemate\n\ \ \ \ \ \ \ |\n\ \ \ v---<\ \n\ \ \ |\n\ \ Game\ end\ \ \n\ \n
comment1.params=time
comment1.target=void\ sleep(int)
comment10.params=turn
comment10.target=BasePiece.Side\ oppositeTurn(BasePiece.Side)
comment11.params=chessPieces\ turn
comment11.target=boolean\ checkCheck(java.util.ArrayList,\ BasePiece.Side)
comment12.params=args
comment12.target=void\ main(java.lang.String[])
comment2.params=board
comment2.target=java.util.ArrayList\ initializeBoard(Board)
comment3.params=pieces
comment3.target=java.util.ArrayList\ getAllPoints(java.util.ArrayList)
comment4.params=pieces\ side
comment4.target=java.util.ArrayList\ getSidePoints(java.util.ArrayList,\ BasePiece.Side)
comment5.params=pieces\ p
comment5.target=int\ getPieceAt(java.util.ArrayList,\ java.awt.Point)
comment6.params=keyListener
comment6.target=int\ waitKeyInterrupt(KeyListener)
comment7.params=vec
comment7.target=int\ smallestVarVec(java.util.ArrayList)
comment8.params=chessPieces\ piece\ side
comment8.target=java.awt.Point\ getPiecePos(java.util.ArrayList,\ java.lang.Class,\ BasePiece.Side)
comment9.params=current\ options\ direction
comment9.target=java.awt.Point\ moveNextPoint(java.awt.Point,\ java.util.ArrayList,\ becker.robots.Direction)
numComments=13
